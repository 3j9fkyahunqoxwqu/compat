<pre class="metadata">
Title: Compatibility Standard
Group: WHATWG
H1: Compatibility
Shortname: compat
Repository: whatwg/compat
Status: LS
No Editor: true
Abstract: This standard describes a collection of non-standard (and often vendor-prefixed) CSS properties and DOM APIs that web browsers need to support for compatibility with the de facto web.
Logo: https://resources.whatwg.org/logo-compat.svg
!Participate: <a href=https://github.com/whatwg/compat>GitHub whatwg/compat</a> (<a href=https://github.com/whatwg/compat/issues/new>new issue</a>, <a href=https://github.com/whatwg/compat/issues>open issues</a>)
!Participate: <a href=https://wiki.whatwg.org/wiki/IRC>IRC: #whatwg on Freenode</a>
!Commits: <a href="https://github.com/whatwg/compat/commits">GitHub whatwg/compat/commits</a>
!Commits: <a href="https://twitter.com/compatstandard">@compatstandard</a>
Indent: 2
Boilerplate: omit conformance
</pre>

<script src=https://resources.whatwg.org/file-issue.js async></script>

<pre class="anchors">
urlPrefix: https://drafts.fxtf.org/geometry/; spec: geometry-1
  type: interface;
    text: DOMMatrix; url: #dommatrix
    text: DOMMatrixReadOnly; url: #dommatrixreadonly
  type: attribute;
    text: m11 element; url: #m11-element
    text: m12 element; url: #m12-element
    text: m13 element; url: #m13-element
    text: m14 element; url: #m14-element
    text: m21 element; url: #m21-element
    text: m22 element; url: #m22-element
    text: m23 element; url: #m23-element
    text: m24 element; url: #m24-element
    text: m31 element; url: #m31-element
    text: m32 element; url: #m32-element
    text: m33 element; url: #m33-element
    text: m34 element; url: #m34-element
    text: m41 element; url: #m41-element
    text: m42 element; url: #m42-element
    text: m43 element; url: #m43-element
    text: m44 element; url: #m44-element
  type: method;
    text: fromString; url: #dom-dommatrixreadonly-fromstring0
urlPrefix: https://heycam.github.io/webidl/
  type: dfn; urlPrefix: #dfn-
    text: throw
  type: exception
    text: SyntaxError
</pre>

<!-- Commented out until we know what the heck to put here:
<h2 id='goals'>Goals</h2> -->

<h2 id='introduction'>Introduction</h2>
<em>This section is non-normative.</em>

There exists an increasingly large corpus of web content that depends on web browsers supporting a number of <code>webkit</code>-prefixed CSS properties and DOM APIs for functionality or layout. This holds especially true for mobile-optimized web content.

This specification aims to describe the minimal set of <code>webkit</code>-prefixed CSS properties and DOM APIs that user agents are required to support for web compatibility.

<h2 id='conformance'>Conformance</h2>
All diagrams, examples, and notes in this specification are
non-normative, as are all sections explicitly marked non-normative.
Everything else in this specification is normative.

The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in RFC 2119.
For readability, these words do not appear in all uppercase letters in this
specification. [[!RFC2119]]

Requirements phrased in the imperative as part of algorithms
(such as "strip any leading space characters" or "return false and
terminate these steps") are to be interpreted with the meaning of the
keyword ("must", "should", "may", etc.) used in introducing the
algorithm.

Conformance requirements phrased as algorithms or specific steps
may be implemented in any manner, so long as the end result is
equivalent. (In particular, the algorithms defined in this
specification are intended to be easy to follow, and not intended to
be performant.)

<h2 id="dom-interfaces">DOM Interfaces</h2>

<h3 id="webkitcssmatrix-interface">The {{WebKitCSSMatrix}} interface</h3>

<!-- cf. https://github.com/WebKit/webkit/blob/master/Source/WebCore/css/WebKitCSSMatrix.idl -->
<pre class="idl">
[Constructor,
 Constructor(DOMString transformList),
 Constructor(WebKitCSSMatrix other)]
interface WebKitCSSMatrix : DOMMatrix {
    // Mutable transform methods
    WebKitCSSMatrix setMatrixValue(DOMString transformList);

    // Immutable transform methods
    WebKitCSSMatrix multiply(WebKitCSSMatrix other);
    WebKitCSSMatrix inverse();
    WebKitCSSMatrix scale(optional unrestricted double scaleX,
                          optional unrestricted double scaleY,
                          optional unrestricted double scaleZ);
    WebKitCSSMatrix rotate(optional unrestricted double rotX,
                           optional unrestricted double rotY,
                           optional unrestricted double rotZ);
    WebKitCSSMatrix rotateAxisAngle(unrestricted double x,
                                    unrestricted double y,
                                    unrestricted double z,
                                    unrestricted double angle);
    WebKitCSSMatrix skewX(unrestricted double sx);
    WebKitCSSMatrix skewY(unrestricted double sy);
};
</pre>

The {{WebKitCSSMatrix}} interface represents a 4×4 homogeneous matrix with methods useful for 2D and 3D transform operations.

The {{WebKitCSSMatrix}} interface may be implemented as a subclass of the {{DOMMatrix}} and {{DOMMatrixReadOnly}} interfaces, defined in Geometry Interfaces Module Level 1 [[!geometry-1]], with key differences noted below.

<h4 id="webkitcssmatrix-constructors">Constructors</h4>

<dl class=domintro>
  <dt>
    <code><var>matrix</var> = new <a constructor
    lt="WebKitCSSMatrix()">WebKitCSSMatrix()</a></code>
  </dt>
  <dd>
    Returns a new {{WebKitCSSMatrix}} object.
  </dd>
</dl>

The
<dfn constructor dfn-for="WebKitCSSMatrix" lt="WebKitCSSMatrix()">WebKitCSSMatrix()</dfn>
constructor, when invoked, must run these steps:

<ol>
  <li>
    Let <var>m</var> be a new {{WebKitCSSMatrix}} object.
  </li>
  <li>For m, set the
    <a attribute spec="geometry-1">m11 element</a>,
    <a attribute spec="geometry-1">m22 element</a>,
    <a attribute spec="geometry-1">m33 element</a>,
    <a attribute spec="geometry-1">m44 element</a> to 1. Set the
    <a attribute spec="geometry-1">m12 element</a>,
    <a attribute spec="geometry-1">m13 element</a>,
    <a attribute spec="geometry-1">m14 element</a>,
    <a attribute spec="geometry-1">m21 element</a>,
    <a attribute spec="geometry-1">m23 element</a>,
    <a attribute spec="geometry-1">m24 element</a>,
    <a attribute spec="geometry-1">m31 element</a>,
    <a attribute spec="geometry-1">m32 element</a>,
    <a attribute spec="geometry-1">m34 element</a>,
    <a attribute spec="geometry-1">m41 element</a>,
    <a attribute spec="geometry-1">m42 element</a>,
    <a attribute spec="geometry-1">m43 element</a> to 0.</li>
  <li>
    Return <var>m</var>.
  </li>
</ol>

<dl class=domintro>
  <dt>
    <code><var>matrix</var> = new <a constructor
    lt="WebKitCSSMatrix(transformList)">WebKitCSSMatrix</a>(transformList)</code>
  </dt>
  <dd>
    Returns a new {{WebKitCSSMatrix}} object.
  </dd>
</dl>

The
<dfn constructor dfn-for="WebKitCSSMatrix" lt="WebKitCSSMatrix(transformList)">WebKitCSSMatrix(transformList)</dfn>
constructor, when invoked, must run these steps:

<ol>
  <li>
    Let <var>m</var> be a new {{WebKitCSSMatrix}} object.
  </li>
  <li>Return the result of the algorithm for the static {{DOMMatrixReadOnly}} <a method for=DOMMatrixReadOnly spec="geometry-1">fromString(transformList)</a> method, as <var>m</var>.
  </li>
</ol>

<dl class=domintro>
  <dt>
    <code><var>matrix</var> = new <a constructor
    lt="WebKitCSSMatrix(other)">WebKitCSSMatrix</a>(other)</code>
  </dt>
  <dd>
    Returns a new {{WebKitCSSMatrix}} object.
  </dd>
</dl>

The
<dfn constructor for="WebKitCSSMatrix" lt="WebKitCSSMatrix(other)">WebKitCSSMatrix(other)</dfn>
constructor, when invoked, must run these steps:

<ol>
  <li>
    Let <var>m</var> be a new {{WebKitCSSMatrix}} object.
  </li>
  <li>For m, set the 16 elements
    <a attribute spec="geometry-1">m11 element</a> …
    <a attribute spec="geometry-1">m44 element</a> to the value of the 16 elements
    <a attribute spec="geometry-1">m11 element</a> …
    <a attribute spec="geometry-1">m44 element</a> of <var>other</var>.
  <li>Return <var>m</var>.</li>
</ol>

<h4 id="webkitcssmatrix-members">Object members</h4>

<div class="XXX">TODO.</div>

<!-- TODO: add note about common usage that requires support for webkitTransform, etc.

      var box = document.getElementById('box');
      var tranString = window.getComputedStyle(box).webkitTransform;
      var m = new WebKitCSSMatrix(tranString);
      box.style.webkitTransform = m.rotateAxisAngle(3,1,2,1);
-->

<h2 id="acknowledgements" class="no-num">Acknowledgements</h2>
Thanks to Jacob Rossi and {{your name here}} for feedback and contributions to this standard.

This standard is written by
<a href="https://miketaylr.com/">Mike Taylor</a>
(<a href="https://www.mozilla.org/">Mozilla</a>,
<a href=mailto:miket@mozilla.com>miket@mozilla.com</a>).

Per <a rel="license" href="//creativecommons.org/publicdomain/zero/1.0/">CC0</a>, to
the extent possible under law, the editors have waived all copyright and related or
neighboring rights to this work.

<script id="head" src="https://resources.whatwg.org/dfn.js"></script>
